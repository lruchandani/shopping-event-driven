version: '3'
services:
  db:
    image: mysql
    container_name: orderdb
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_USER: order
      MYSQL_PASSWORD: order
      MYSQL_DATABASE: order
    volumes:
      - data:/var/lib/mysql
  productdb:
    image: mysql
    container_name: productdb
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3307:3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_USER: productd
      MYSQL_PASSWORD: product
      MYSQL_DATABASE: products
    volumes:
      - product-db:/var/lib/mysql
  zk:
    image: zookeeper:3.4.9
    hostname: zk
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zk:2888:3888
    volumes:
      - zk-data:/data
      - zk-datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zk:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - zk-kafka-data:/var/lib/kafka/data
    depends_on:
      - zk
volumes:
  data:
  product-db:
  zk-data:
  zk-datalog:
  zk-kafka-data:

